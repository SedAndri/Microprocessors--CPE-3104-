org 100h

.DATA
MSG DB "Set password: $"
PASSWORD DB 10,?,10 dup(' ')
INPUT DB 10,?,10 dup(' ')
MSG1 DB 0AH, 0DH, "Enter the password: $"
MSG2 DB 0AH, 0DH, "Access Granted!$"
MSG3 DB 0AH, 0DH, "Access Denied!$"
.CODE

MOV AX, @DATA
MOV DS, AX

MOV DX, OFFSET MSG
MOV AH, 9
INT 21H

XOR CX, CX
XOR BX, BX
MOV CX, 10H
MOV BX, 2
MOV DX, OFFSET PASSWORD

SET_PASS:
MOV AH, 7                    
INT 21H

CMP AL, 0DH
JE DISPLAY_ENTER
MOV PASSWORD[BX], AL 

MOV AH, 2
MOV DL, 2AH
INT 21H

DEC CX
INC BX
CMP CX, 0
JE DISPLAY_ENTER
LOOP SET_PASS

DISPLAY_ENTER:
MOV PASSWORD[BX], '$'
MOV DX, OFFSET MSG1
MOV AH, 9
INT 21H

XOR CX, CX
XOR BX, BX
MOV CX, 10H
MOV BX, 2
MOV DX, OFFSET INPUT

ENTER_PASS:
MOV AH, 7
INT 21H

CMP AL, 0DH
JE SET_CHECK:
MOV INPUT[BX], AL

MOV AH, 2
MOV DL, 2AH
INT 21H

DEC CX
INC BX
CMP CX, 0
JE SET_CHECK:
LOOP ENTER_PASS

SET_CHECK:
MOV INPUT[BX], '$'
XOR BX, BX
XOR DX, DX
XOR AX, AX
MOV SI, OFFSET PASSWORD+2
MOV DI, OFFSET INPUT+2
JMP GET_STRLEN_PASSWORD

GET_STRLEN_PASSWORD:
MOV AL, [SI]
CMP AL, '$'
JE SET_ADDRESS
INC CX
INC SI
JMP GET_STRLEN_PASSWORD

SET_ADDRESS:
MOV SI, OFFSET PASSWORD+2
JMP CHECK_PASSWORD

CHECK_PASSWORD:   
MOV AL, [SI]
MOV DL, [DI]
CMP AL, DL
JNE ACCESS_DENIED
INC SI
INC DI
LOOP CHECK_PASSWORD
CMP [SI], '$'
JNE ACCESS_GRANTED
    
ACCESS_GRANTED:
MOV DX, OFFSET MSG2
MOV AH, 9
INT 21H
JMP END

ACCESS_DENIED:
MOV DX, OFFSET MSG3
MOV AH, 9
INT 21H
JMP END


END:

RET
