;====================================================================
; Main.asm file generated by New Project wizard
;
; Created:   Wed Sep 24 2025
; Processor: 8086
; Compiler:  MASM32
;
; Before starting simulation set Internal Memory Size 
; in the 8086 model properties to 0x10000
;====================================================================

;==============================================================
; DATA SEGMENT AND I/O PORT MAP
; - PORTA: LED bar outputs
; - PORTB: 7-segment display outputs
; - PORTC: switch inputs to select mode/digit
;==============================================================
DATA SEGMENT 
    PORTA EQU 0F0H ; PORTA address 
    PORTB EQU 0F2H ; PORTB address 
    PORTC EQU 0F4H ; PORTC address 
DATA ENDS 

;==============================================================
; CODE SEGMENT SETUP
; - Initialize DS
; - Set code origin
;==============================================================
CODE SEGMENT PUBLIC 'CODE'
    ASSUME CS:CODE, DS:DATA
    MOV AX, DATA
    MOV DS, AX
    ORG 0000H

;==============================================================
; MAIN LOOP (START)
; - Read switches on PORTC
; - Dispatch:
;   00000000b -> OFF_SEG   (turn off 7-seg)
;   00000001b -> COUNT_SEG (count 0..9 on 7-seg and LEDs)
;   00010001b..10010001b -> show digits 1..9 (falls through)
; - Unmatched -> re-read
;==============================================================
START:
    MOV DX, PORTC
    IN  AL, DX

    cmp al, 00000000b
    je OFF_SEG
    
    cmp al, 00000001b
    je COUNT_SEG

    ;cmp al, 00010001b 
    ;je COUNT_LED          ; Optional LED-only count (not currently branched)
    
    cmp al, 00010001b 
    je ONE
    
    cmp al, 00100001b 
    je TWO 
    
    cmp al, 00110001b 
    je THREE 
    
    cmp al, 01000001b 
    je FOUR 
    
    cmp al, 01010001b 
    je FIVE 
    
    cmp al, 01100001b 
    je SIX 
    
    cmp al, 01110001b 
    je SEVEN 
    
    cmp al, 10000001b 
    je EIGHT 
    
    cmp al, 10010001b 
    je NINE 
    
    JMP START

;==============================================================
; ROUTINE: COUNT_LED
; - Sequentially light LEDs on PORTA from 0 to 9 patterns
; - Short delay between steps
; - Returns to START
;==============================================================
COUNT_LED: 
    MOV DX, PORTA
    MOV AL, 0000b
    OUT DX, AL
    CALL DELAY_1MS
    
    MOV DX, PORTA
    MOV AL, 0001b
    OUT DX, AL
    CALL DELAY_1MS
    
    MOV DX, PORTA
    MOV AL, 0010b
    OUT DX, AL
    CALL DELAY_1MS
    
    MOV DX, PORTA
    MOV AL, 0011b
    OUT DX, AL
    CALL DELAY_1MS
    
    MOV DX, PORTA
    MOV AL, 0100b
    OUT DX, AL
    CALL DELAY_1MS
    
    MOV DX, PORTA
    MOV AL, 0101b
    OUT DX, AL
    CALL DELAY_1MS
    
    MOV DX, PORTA
    MOV AL, 0110b
    OUT DX, AL
    CALL DELAY_1MS
    
    MOV DX, PORTA
    MOV AL, 0111b
    OUT DX, AL
    CALL DELAY_1MS
    
    MOV DX, PORTA
    MOV AL, 1000b
    OUT DX, AL
    CALL DELAY_1MS
    
    MOV DX, PORTA
    MOV AL, 1001b
    OUT DX, AL
    CALL DELAY_1MS
    
    MOV AL, 0000b
    OUT DX, AL

    JMP START 

;==============================================================
; ROUTINE: COUNT_SEG
; - Display 0 on 7-seg (PORTB) with LEDs mirroring on PORTA
; - Then FALLS THROUGH to ONE..NINE to display 1..9 sequentially
; - Each step delays briefly
;==============================================================
COUNT_SEG:
    MOV DX, PORTB
    MOV AL, 00111111B ; 0
    OUT DX, AL
    
    MOV DX, PORTA
    MOV AL, 0000b
    OUT DX, AL
    
    CALL DELAY_1MS

;==============================================================
; DIGIT DISPLAY BLOCK (ONE..NINE)
; - Each label sets 7-seg pattern on PORTB and LED code on PORTA
; - Arranged to fall through to the next digit unless branched away
; - Used by COUNT_SEG (to count) and by direct jumps from START
;   (Note: jumping to ONE/TWO/... will display that digit and then
;          continue through subsequent digits due to fall-through)
;==============================================================
    ONE:
    MOV DX, PORTB
    MOV AL, 00000110B ; 1
    OUT DX, AL
    
    MOV DX, PORTA
    MOV AL, 0001b
    OUT DX, AL
    
    CALL DELAY_1MS

    TWO:
    MOV DX, PORTB
    MOV AL, 01011011B ; 2
    OUT DX, AL
    
    MOV DX, PORTA
    MOV AL, 0010b
    OUT DX, AL
    
    CALL DELAY_1MS

    THREE:
    MOV DX, PORTB
    MOV AL, 01001111B ; 3
    OUT DX, AL
    
    MOV DX, PORTA
    MOV AL, 0011b
    OUT DX, AL
    
    CALL DELAY_1MS

    FOUR:
    MOV DX, PORTB
    MOV AL, 01100110B ; 4
    OUT DX, AL
    
    MOV DX, PORTA
    MOV AL, 0100b
    OUT DX, AL
    
    CALL DELAY_1MS

    FIVE:
    MOV DX, PORTB
    MOV AL, 01101101B ; 5
    OUT DX, AL
    MOV DX, PORTA
    MOV AL, 0101b
    OUT DX, AL
    CALL DELAY_1MS

    SIX:
    MOV DX, PORTB
    MOV AL, 01111101B ; 6
    OUT DX, AL
    MOV DX, PORTA
    MOV AL, 0110b
    OUT DX, AL
    CALL DELAY_1MS

    SEVEN:
    MOV DX, PORTB
    MOV AL, 00000111B ; 7
    OUT DX, AL
    MOV DX, PORTA
    MOV AL, 0111b
    OUT DX, AL
    CALL DELAY_1MS

    EIGHT:
    MOV DX, PORTB
    MOV AL, 01111111B ; 8
    OUT DX, AL
    MOV DX, PORTA
    MOV AL, 1000b
    OUT DX, AL
    CALL DELAY_1MS

    NINE:
    MOV DX, PORTB
    MOV AL, 01101111B ; 9
    OUT DX, AL
    MOV DX, PORTA
    MOV AL, 1001b
    OUT DX, AL
    CALL DELAY_1MS
    
    ;MOV AL, 00111111B ;0
    ;OUT DX, AL
    
    JMP START
    
;==============================================================
; ROUTINE: OFF_SEG
; - Turn off 7-segment display (PORTB = 0)
; - Leave LEDs as-is (PORTA unchanged)
;==============================================================
    OFF_SEG:
    MOV DX, PORTB
    MOV AL, 00000000B ; blank/off
    OUT DX, AL
    CALL DELAY_1MS
    
    JMP START

;==============================================================
; ROUTINE: DELAY_1MS (approximate)
; - Short software delay using BX countdown loop
; - Adjust BX preload to tune delay for simulator settings
;==============================================================
DELAY_1MS:
    MOV BX, 9H
L1:
    DEC BX
    NOP
    JNZ L1
    RET

CODE ENDS
END START